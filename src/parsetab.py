
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '59653305E61BF9BDF3E860B142AE5EE9'
    
_lr_action_items = {'QUIT':([0,23,],[13,13,]),'BEGIN':([0,23,],[7,7,]),'DIVIDE':([3,14,16,20,21,26,35,36,41,43,44,46,48,49,50,51,62,65,68,],[-26,-27,31,-24,-27,31,31,31,31,31,-25,31,31,-23,31,-22,31,31,31,]),'END':([0,23,],[9,9,]),'NAME':([0,6,11,17,18,19,22,23,24,25,27,28,29,30,31,32,33,53,55,57,59,67,],[14,21,21,21,21,38,38,14,21,21,21,21,21,21,21,21,21,21,38,21,21,21,]),'DUMP':([0,23,],[1,1,]),'READ':([0,23,],[2,2,]),'NUMBER':([0,6,11,17,18,23,24,25,27,28,29,30,31,32,33,53,57,59,67,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'BEGIN_READONLY':([0,23,],[4,4,]),'TIMES':([3,14,16,20,21,26,35,36,41,43,44,46,48,49,50,51,62,65,68,],[-26,-27,33,-24,-27,33,33,33,33,33,-25,33,33,-23,33,-22,33,33,33,]),'WRITE':([0,23,],[10,10,]),'COMMA':([3,20,21,36,38,41,43,44,48,49,50,51,65,],[-26,-24,-27,53,55,57,59,-25,-20,-23,-21,-22,67,]),'PLUS':([3,14,16,20,21,26,35,36,41,43,44,46,48,49,50,51,62,65,68,],[-26,-27,30,-24,-27,30,30,30,30,30,-25,30,-20,-23,-21,-22,30,30,30,]),'LPAREN':([0,1,2,4,6,7,9,10,11,12,15,17,18,23,24,25,27,28,29,30,31,32,33,53,57,59,67,],[11,17,18,19,11,22,24,25,11,27,29,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'FAIL':([0,23,],[12,12,]),'RPAREN':([3,17,20,21,26,35,37,38,39,41,42,44,45,47,48,49,50,51,62,63,64,68,],[-26,34,-24,-27,44,52,54,-16,56,-18,58,-25,60,61,-20,-23,-21,-22,66,-17,-19,69,]),'EQUALS':([14,],[28,]),'RECOVER':([0,23,],[15,15,]),'MINUS':([0,3,6,11,14,16,17,18,20,21,23,24,25,26,27,28,29,30,31,32,33,35,36,41,43,44,46,48,49,50,51,53,57,59,62,65,67,68,],[6,-26,6,6,-27,32,6,6,-24,-27,6,6,6,32,6,6,6,6,6,6,6,32,32,32,32,-25,32,-20,-23,-21,-22,6,6,6,32,32,6,32,]),'SEMICOLON':([3,8,13,14,16,20,21,34,44,46,48,49,50,51,52,54,56,58,60,61,66,69,],[-26,23,-4,-27,-15,-24,-27,-12,-25,-14,-20,-23,-21,-22,-13,-6,-5,-7,-8,-9,-10,-11,]),'$end':([0,3,5,8,13,14,16,20,21,23,34,40,44,46,48,49,50,51,52,54,56,58,60,61,66,69,],[-1,-26,0,-2,-4,-27,-15,-24,-27,-1,-12,-3,-25,-14,-20,-23,-21,-22,-13,-6,-5,-7,-8,-9,-10,-11,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'namelist':([19,22,55,],[37,39,63,]),'expression':([0,6,11,17,18,23,24,25,27,28,29,30,31,32,33,53,57,59,67,],[16,20,26,35,36,16,41,43,41,46,41,48,49,50,51,62,41,65,68,]),'statement':([0,23,],[8,8,]),'stmtlist':([0,23,],[5,40,]),'exprlist':([24,27,29,57,],[42,45,47,64,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> stmtlist","S'",1,None,None,None),
  ('stmtlist -> <empty>','stmtlist',0,'p_stmtlist_0','adb.py',104),
  ('stmtlist -> statement','stmtlist',1,'p_stmtlist_1','adb.py',109),
  ('stmtlist -> statement SEMICOLON stmtlist','stmtlist',3,'p_stmtlist_2','adb.py',114),
  ('statement -> QUIT','statement',1,'p_statement_quit','adb.py',119),
  ('statement -> BEGIN LPAREN namelist RPAREN','statement',4,'p_statement_begin_transaction','adb.py',124),
  ('statement -> BEGIN_READONLY LPAREN namelist RPAREN','statement',4,'p_statement_begin_readonly_transaction','adb.py',135),
  ('statement -> END LPAREN exprlist RPAREN','statement',4,'p_statement_end_transaction','adb.py',146),
  ('statement -> FAIL LPAREN exprlist RPAREN','statement',4,'p_statement_fail','adb.py',153),
  ('statement -> RECOVER LPAREN exprlist RPAREN','statement',4,'p_statement_recover','adb.py',160),
  ('statement -> READ LPAREN expression COMMA expression RPAREN','statement',6,'p_statement_read','adb.py',167),
  ('statement -> WRITE LPAREN expression COMMA expression COMMA expression RPAREN','statement',8,'p_statement_write','adb.py',173),
  ('statement -> DUMP LPAREN RPAREN','statement',3,'p_statement_dump','adb.py',179),
  ('statement -> DUMP LPAREN expression RPAREN','statement',4,'p_statement_dump_spec','adb.py',193),
  ('statement -> NAME EQUALS expression','statement',3,'p_statement_assign','adb.py',212),
  ('statement -> expression','statement',1,'p_statement_expr','adb.py',217),
  ('namelist -> NAME','namelist',1,'p_namelist_1','adb.py',222),
  ('namelist -> NAME COMMA namelist','namelist',3,'p_namelist_2','adb.py',227),
  ('exprlist -> expression','exprlist',1,'p_exprlist_1','adb.py',232),
  ('exprlist -> expression COMMA exprlist','exprlist',3,'p_exprlist_2','adb.py',237),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','adb.py',242),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','adb.py',243),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','adb.py',244),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','adb.py',245),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','adb.py',257),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','adb.py',262),
  ('expression -> NUMBER','expression',1,'p_expression_number','adb.py',267),
  ('expression -> NAME','expression',1,'p_expression_name','adb.py',272),
]
